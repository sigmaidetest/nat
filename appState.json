{"EDITOR_STATE":{"allProjectFiles":{"261bafd6-e58c-475d-9415-c1a9385d5243":{"id":"261bafd6-e58c-475d-9415-c1a9385d5243","parent":null,"name":"slappbooks","type":"DIRECTORY","isDirectory":true,"children":["6ce22331-3d5d-4d2e-a5ff-a2f2b38257dd","0cafcfb9-14f8-4cdc-861f-299678af0759","10af9bcd-ac92-434b-9eb0-ca8ff233ec9b","1f616325-bebd-4cb6-9a59-efae98b7760d","d5e8f837-33f8-4736-ba1b-eb1f3aface18","02bc79d4-d52f-4002-b502-992569e9d409","d5925ac9-5dfa-4cc8-9963-15dd6fb40204","0fddcfbb-9df4-458a-a743-9f28159227fc","0b73f184-a777-475d-9741-bf94b7a4629a","2bf402ef-a957-429b-878f-f5b4c91f0ed3","8585b721-aeb2-4a48-978d-ddfca08566d1"],"isRemovable":false,"filePath":"slappbooks"},"6ce22331-3d5d-4d2e-a5ff-a2f2b38257dd":{"id":"6ce22331-3d5d-4d2e-a5ff-a2f2b38257dd","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-lambda.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\tconsole.log(event);\n\tlet transactions = [];\n\tlet dates = [];\n\tlet checkNo = [];\n\tlet notes = [];\n\tlet amounts = [];\n\tlet creditArray = [];\n\tlet entityNames = [];\n\n\ttransactions = event.slice();\n\ttransactions.forEach((transaction, index) => {\n\t\tdates.push(transaction.date);\n\t\tcheckNo.push(transaction.checkNo);\n\t\tnotes.push(transaction.notes);\n\t\tamounts.push(transaction.amount);\n\t\tcreditArray.push(transaction.isCredit);\n\t\tentityNames.push(transaction.entityName);\n\t\tif((transaction.amount).toString().startsWith(\"(\") && transaction.amount.toString().endsWith(\")\")) {\n\t\t\ttransaction.amount = transaction.amount.slice(1, transaction.amount.length-1);\n\t\t} \n\t\ttransaction.isCredit = transaction.isCredit ? 1 : 0;\n\t});\n\n\n\trds.beginTransaction({\n\t\tinstanceIdentifier: 'slappbooksdb'\n\t}, function (error, connection) {\n\t\tif (error) { throw err; }\n\n\t\t// Replace the query with the actual query\n\t\t// You can pass the existing connection to this function.\n\t\t// A new connection will be creted if it's not present as the third param\n\n\n\t\t// Replace the query with the actual query\n\t\t// You can pass the existing connection to this function.\n\t\t// A new connection will be creted if it's not present as the third param \n\n\t\tlet sql = 'INSERT INTO transaction (transaction_id, set_id, date, entity_id, is_credit, cheque_no, voucher_no, amount, notes, reconcile) VALUES (?,?,?,?,?, ?, ?, ?, ?, ?);'\n\t\ttransactions.forEach( (transaction, index) => {\n\n\t\t\trds.query({\n\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\tquery: 'SELECT id FROM entity WHERE name = ?',\n\t\t\t\tinserts: [transaction.entityName]\n\t\t\t}, function (error, results, connection) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Error occurred while retreiving the entity id from the database\", error);\n\t\t\t\t\tconnection.rollback();\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Successfully retrieved the entity id\")\n\t\t\t\t\tlet entity_id = results[0].id;\n\t\t\t\t\tconsole.log(transaction.trId);\n\t\t\t\t\t// Replace the query with the actual query\n\t\t\t\t\t// You can pass the existing connection to this function.\n\t\t\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\t\t\trds.query({\n\t\t\t\t\t\tidentifier: 'slappbooksdb',\n\t\t\t\t\t\tquery: sql,\n\t\t\t\t\t\tinserts: [transaction.trId, transaction.setId, transaction.date, entity_id, transaction.isCredit, transaction.checkNo, transaction.voucherNo, transaction.amount, transaction.notes, transaction.reconcile]\n\t\t\t\t\t}, function (error, results, connection) {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconnection.rollback();\n\t\t\t\t\t\t\tconsole.log(\"Error occurred while inserting the transaction\", error);\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(\"Successfully inserted the transaction\")\n\t\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(index === transactions.length) {\n\t\t\t\t\t\t\tconnection.end();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, connection);\n\n\t\t\t\t}\n\n\t\t\t}, connection);\n\n\t\t\tconnection.commit();\n\t\t});\n\n\t});\n\n\n\tcallback(null, JSON.stringify(event));\n}","formatted":true,"resources":["rds-slappbooksdb","rds-slappbooksdb","rds-slappbooksdb","rds-slappbooksdb","apigusEast1slappbooksapiaddTransactionpost"],"triggers":[{"resourceName":"apigusEast1slappbooksapiaddTransactionpost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"addTransaction","resourcePath":"/addTransaction","restMethod":"POST","stageMode":0,"stageName":"Prod"}}]},"1c7fb2a7-02c1-4104-9bfe-cbd3b96c79d5":{"id":"1c7fb2a7-02c1-4104-9bfe-cbd3b96c79d5","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"42c642f2-c1d2-4fc0-8a41-061e114709c3":{"id":"42c642f2-c1d2-4fc0-8a41-061e114709c3","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };   \n    };","formatted":true,"resources":[],"triggers":[]},"0cafcfb9-14f8-4cdc-861f-299678af0759":{"id":"0cafcfb9-14f8-4cdc-861f-299678af0759","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-retrieve-transactions.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-retrieve-transactions.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\tconsole.log(event);\n\tlet postObject = event;\n\tlet entityName = postObject.entity;\n\tlet pageNo = postObject.page;\n\tlet pageSize = postObject.pageSize;\n\tlet sorted = postObject.sorted;\n\tlet filtered = postObject.filtered;\n\tlet startIndex = +pageNo * +pageSize;\n\tlet endIndex = startIndex + pageSize;\n\tlet pageNumber = 1;\n\n\t// Replace the query with the actual query\n\t// You can pass the existing connection to this function.\n\t// A new connection will be creted if it's not present as the third param \n\tlet sql = 'SELECT * FROM transaction T INNER JOIN entity E ON T.entity_id = E.id WHERE E.name = ? LIMIT ?,?';\n\n\n\t\t\t// Replace the query with the actual query\n\t\t\t// You can pass the existing connection to this function.\n\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\trds.query({\n\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\tquery: 'SELECT count(*) as count FROM transaction;'\n\t\t\t}, function (error, results, connection) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Error occurred while retrieving count\");\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Successfully obtained database count\");\n\t\t\t\t\tconsole.log(results[0].count);\n\t\t\t\t\tpageNumber = Math.ceil(parseFloat(results[0].count) / parseFloat(pageSize));\n\t\t\t\t\t\n\t\t\t\t\t// Replace the query with the actual query\n\t\t\t\t\t// You can pass the existing connection to this function.\n\t\t\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\t\t\t\trds.query({\n\t\t\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\t\t\tquery: sql,\n\t\t\t\t\t\tinserts: [entityName, startIndex, pageSize]\n\t\t\t\t\t}, function (error, results, connection) {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconsole.log(\"Error occurred while retreiving transactions\", error);\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet transactions = [];\n\t\t\t\t\t\t\tconsole.log(\"Successfully retreived transactions\");\n\t\t\t\t\t\t\tresults.forEach(result => {\n\t\t\t\t\t\t\t\ttransactions.push({\n\t\t\t\t\t\t\t\t\ttrId: result.transaction_id,\n\t\t\t\t\t\t\t\t\tdate: result.date,\n\t\t\t\t\t\t\t\t\tcheckNo: result.cheque_no,\n\t\t\t\t\t\t\t\t\tvoucherNo: result.voucher_no,\n\t\t\t\t\t\t\t\t\tisCredit: result.is_credit,\n\t\t\t\t\t\t\t\t\tamount: result.amount,\n\t\t\t\t\t\t\t\t\tnotes: result.notes,\n\t\t\t\t\t\t\t\t\treconcile: result.reconcile,\n\t\t\t\t\t\t\t\t\tsetId: result.set_id,\n\t\t\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet finalResult = { rows: transactions, pages: pageNumber}\n\t\t\t\t\t\t\tconsole.log(finalResult);\n\t\t\t\t\t\t\tconnection.end();\n\t\t\t\t\t\t\tcallback(null, finalResult);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, connection);\n\n\t\t\t\t}\n\t\t\t});\n\n\n\t/* let transactions = {\n\t\trows: [{ date: '01/16/2018', checkNo: '', notes: '', amount: 100, isCredit: false, entityName: 'Cash', trId: '12345678' },\n\t\t{ date: '01/16/2018', checkNo: '', notes: '', amount: '(100)', isCredit: true, entityName: 'Bank', trId: '87654321' }],\n\t\tpages: 1\n\t};\n\tcallback(null, transactions); */\n}","formatted":true,"resources":["rds-slappbooksdb","rds-slappbooksdb","apigusEast1slappbooksapigetTransactionListpost"],"triggers":[{"resourceName":"apigusEast1slappbooksapigetTransactionListpost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getTransactionList","resourcePath":"/getTransactionList","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}}]},"10af9bcd-ac92-434b-9eb0-ca8ff233ec9b":{"id":"10af9bcd-ac92-434b-9eb0-ca8ff233ec9b","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-create-entity.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-create-entity.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\tlet entity = event;\n\n\tlet sql = 'INSERT INTO entity (name, currency, type) values (?, ?, ?)';\n\t// Replace the query with the actual query\n\t// You can pass the existing connection to this function.\n\t// A new connection will be creted if it's not present as the third param \n\trds.query({\n\t\tinstanceIdentifier: 'slappbooksdb',\n\t\tquery: sql,\n\t\tinserts: [entity.entity, entity.currency, entity.entityType]\n\t}, function (error, results, connection) {\n\t\tif (error) {\n\t\t\tconsole.log(\"Error occurred while inserting the entity\", error);\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconsole.log(\"Successfully inserted the entity\");\n\t\t\tconsole.log(results);\n\t\t}\n\t\tconnection.end();\n\t\tcallback(null, 'Successfully executed');\n\t});\n}","formatted":true,"resources":["rds-slappbooksdb"],"triggers":[{"resourceName":"apigusEast1slappbooksapicreateEntitypost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"createEntity","resourcePath":"/createEntity","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}}]},"1f616325-bebd-4cb6-9a59-efae98b7760d":{"id":"1f616325-bebd-4cb6-9a59-efae98b7760d","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-get-transaction.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-get-transaction.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n    let transactionId = event.queryStringParameters.id;\n\n\n    \n    sql = 'SELECT T.transaction_id, T.set_id, T.date, T.cheque_no, T.is_credit, T.amount, T.notes, T.reconcile, E.name FROM transaction T INNER JOIN entity E on T.entity_id=E.id where T.set_id=?;';    \n    // Replace the query with the actual query\n    // You can pass the existing connection to this function.\n    // A new connection will be creted if it's not present as the third param \n    rds.query({\n        instanceIdentifier: 'slappbooksdb',\n        query: sql,\n        inserts: [transactionId]\n    }, function (error, results, connection) {\n        if (error) {\n            console.log(\"Error occurred while retrieving the transaction with set_id\", transactionId, error);\n            throw error;\n        } else {\n            console.log(\"Successfully retrieved the transaction\")\n            let transactions = [];\n            results.forEach(result => {\n                transactions.push({\n                    trId: result.transaction_id,\n                    setId: result.setId,\n                    date: result.date,\n                    checkNo: result.cheque_no,\n                    voucherNo: result.voucher_no,\n                    isCredit: result.is_credit,\n                    amount: result.amount,\n                    notes: result.notes,\n                    reconcile: result.reconcile,\n                    entityName: result.name\n                });\n            });\n            console.log(transactions);\n            connection.end();\n             callback(null, {\n                        \"statusCode\": 200,\n                        \"headers\": {\n                            \"my_header\": \"my_value\",\n                            \"Access-Control-Allow-Origin\": \"*\"\n                        },\n                        \"body\": JSON.stringify(transactions),\n                        \"isBase64Encoded\": false\n                    });\n        }\n    });\n\n\n   /* let trs = [{ date: '01/16/2018', checkNo: '', notes: '', amount: 100, isCredit: false, entityName: 'Cash', trId: '12345678' },\n    { date: '01/16/2018', checkNo: '', notes: '', amount: '(100)', isCredit: true, entityName: 'Bank', trId: '87654321' }];\n    console.log(\"Data retrieved\", trs);\n    callback(null, {\n        \"statusCode\": 200,\n        \"headers\": {\n            \"my_header\": \"my_value\",\n            \"Access-Control-Allow-Origin\": \"*\"\n        },\n        \"body\": JSON.stringify(trs),\n        \"isBase64Encoded\": false\n    });*/\n}","formatted":true,"resources":["rds-slappbooksdb","apigusEast1slappbooksapigetTransactionByIdget"],"triggers":[{"resourceName":"apigusEast1slappbooksapigetTransactionByIdget","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getTransactionById","resourcePath":"/getTransactionById","restMethod":"GET","proxyIntegration":true,"stageMode":0,"stageName":"Prod"}}]},"28f82728-638c-484e-823f-3b48e364e4e2":{"id":"28f82728-638c-484e-823f-3b48e364e4e2","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"a1bacf36-048c-4b41-861f-081764fdbe35":{"id":"a1bacf36-048c-4b41-861f-081764fdbe35","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"fed2041b-6038-4719-aecf-67776887d53a":{"id":"fed2041b-6038-4719-aecf-67776887d53a","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"230fd89a-b6ad-4065-b6e2-85335d2289dd":{"id":"230fd89a-b6ad-4065-b6e2-85335d2289dd","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"8e90a0cd-cc9e-49c1-915c-636e2531f485":{"id":"8e90a0cd-cc9e-49c1-915c-636e2531f485","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"d5e8f837-33f8-4736-ba1b-eb1f3aface18":{"id":"d5e8f837-33f8-4736-ba1b-eb1f3aface18","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-get-entity-list.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-get-entity-list.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\tlet sql = 'SELECT * FROM entity;'\n\n\t// Replace the query with the actual query\n\t// You can pass the existing connection to this function.\n\t// A new connection will be creted if it's not present as the third param \n\trds.query({\n\t\tinstanceIdentifier: 'slappbooksdb',\n\t\tquery: sql\n\t}, function (error, results, connection) {\n\t\tif (error) {\n\t\t\tconsole.log(\"Error occurred while retrieving entities\");\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconsole.log(\"Successfully retrieved entities\")\n\t\t\tconsole.log(results);\n\t\t\tlet entities = [];\n\t\t\tresults.forEach(result => {\n\t\t\t\tentities.push({\n\t\t\t\t\tentityName: result.name,\n\t\t\t\t\tentityType: result.type,\n\t\t\t\t\tdefaultCurrency: result.currency\n\t\t\t\t});\n\t\t\t});\n\t\t\tconsole.log(entities);\n\t\t\tconnection.end();\n\t\t\tcallback(error, {\n\t\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\t\"headers\": {\n\t\t\t\t\t\t\"my_header\": \"my_value\",\n\t\t\t\t\t\t\"Access-Control-Allow-Origin\": \"*\"\n\t\t\t\t\t},\n\t\t\t\t\t\"body\": JSON.stringify(entities),\n\t\t\t\t\t\"isBase64Encoded\": false\n\t\t\t\t});\n\t\t}\n\t});\n}","formatted":true,"resources":["rds-slappbooksdb","apigusEast1slappbooksapigetEntityListget"],"triggers":[{"resourceName":"apigusEast1slappbooksapigetEntityListget","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getEntityList","resourcePath":"/getEntityList","restMethod":"GET","proxyIntegration":true,"stageMode":0,"stageName":"Prod"}}]},"43a34cfd-c139-45f6-a00b-4e5ab4a32c34":{"id":"43a34cfd-c139-45f6-a00b-4e5ab4a32c34","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"65abaa92-243f-4c9a-988b-4aed7faac7a2":{"id":"65abaa92-243f-4c9a-988b-4aed7faac7a2","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"02bc79d4-d52f-4002-b502-992569e9d409":{"id":"02bc79d4-d52f-4002-b502-992569e9d409","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-insert-transaction-with-currency.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-insert-transaction-with-currency.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\n\tpostObject = event;\n\ttransactions = postObject.transactions;\n\tconversions = postObject.conversionDetails;\n\tconsole.log(conversions);\n\n\ttransactions.forEach((transaction, index) => {\n\t\tif ((transaction.amount).toString().startsWith(\"(\") && transaction.amount.toString().endsWith(\")\")) {\n\t\t\ttransaction.amount = transaction.amount.slice(1, transaction.amount.length - 1);\n\t\t}\n\t\ttransaction.isCredit = transaction.isCredit ? 1 : 0;\n\t});\n\n\n\trds.beginTransaction({\n\t\tinstanceIdentifier: 'slappbooksdb'\n\t}, function (error, connection) {\n\t\tif (error) { throw err; }\n\n\t\t// Replace the query with the actual query\n\t\t// You can pass the existing connection to this function.\n\t\t// A new connection will be creted if it's not present as the third param\n\n\n\t\t// Replace the query with the actual query\n\t\t// You can pass the existing connection to this function.\n\t\t// A new connection will be creted if it's not present as the third param \n\n\t\tlet sql = 'INSERT INTO transaction (transaction_id, set_id, date, entity_id, is_credit, cheque_no, voucher_no, amount, notes, reconcile) VALUES (?,?,?,?,?, ?, ?, ?, ?, ?);'\n\t\ttransactions.forEach((transaction, index) => {\n\n\t\t\trds.query({\n\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\tquery: 'SELECT id FROM entity WHERE name = ?',\n\t\t\t\tinserts: [transaction.entityName]\n\t\t\t}, function (error, results, connection) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Error occurred while retreiving the entity id from the database\", error);\n\t\t\t\t\tconnection.rollback();\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Successfully retrieved the entity id\")\n\t\t\t\t\tlet entity_id = results[0].id;\n\t\t\t\t\tconsole.log(transaction.trId);\n\t\t\t\t\t// Replace the query with the actual query\n\t\t\t\t\t// You can pass the existing connection to this function.\n\t\t\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\t\t\trds.query({\n\t\t\t\t\t\tidentifier: 'slappbooksdb',\n\t\t\t\t\t\tquery: sql,\n\t\t\t\t\t\tinserts: [transaction.trId, transaction.setId, transaction.date, entity_id, transaction.isCredit, transaction.checkNo, transaction.voucherNo, transaction.amount, transaction.notes, transaction.reconcile]\n\t\t\t\t\t}, function (error, results, connection) {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconnection.rollback();\n\t\t\t\t\t\t\tconsole.log(\"Error occurred while inserting the transaction\", error);\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(\"Successfully inserted the transaction\")\n\t\t\t\t\t\t\tconsole.log(results);\n\n\n\t\t\t\t\t\t\tsql = 'INSERT INTO conversion (transaction_id, to_currency, from_currency, rate) VALUES (?,?,?,?)';\n\t\t\t\t\t\t\t// Replace the query with the actual query\n\t\t\t\t\t\t\t// You can pass the existing connection to this function.\n\t\t\t\t\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\t\t\t\t\trds.query({\n\t\t\t\t\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\t\t\t\t\tquery: sql,\n\t\t\t\t\t\t\t\tinserts: [transaction.trId, conversions[index]._toCurrency,  conversions[index]._fromCurrency, conversions[index]._conversionRate]\n\t\t\t\t\t\t\t}, function (error, results, connection) {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tconnection.rollback();\n\t\t\t\t\t\t\t\t\tconsole.log(\"Error occurred while inserting conversions\");\n\t\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Successfully inserted a conversion object\");\n\t\t\t\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconnection.end();\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (index === transactions.length) {\n\t\t\t\t\t\t\tconnection.end();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, connection);\n\n\n\n\t\t\t\t}\n\n\t\t\t}, connection);\n\n\t\t\tconnection.commit();\n\t\t});\n\n\t});\n\n\tcallback(null, JSON.stringify(event));\n}","formatted":true,"resources":["rds-slappbooksdb","apigusEast1slappbooksapicreateTransactionWithCurrencyDifferencepost"],"triggers":[{"resourceName":"apigusEast1slappbooksapicreateTransactionWithCurrencyDifferencepost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"createTransactionWithCurrencyDifference","resourcePath":"/createTransactionWithCurrencyDifference","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}}]},"00cc1a11-e538-4dd4-9fff-54754855cb0a":{"id":"00cc1a11-e538-4dd4-9fff-54754855cb0a","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"d5925ac9-5dfa-4cc8-9963-15dd6fb40204":{"id":"d5925ac9-5dfa-4cc8-9963-15dd6fb40204","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-update-transaction.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-update-transaction.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\tlet transactions = event.slice();\n\ttransactions.forEach(transaction => {\n\t\tif ((transaction.amount).toString().startsWith(\"(\") && transaction.amount.toString().endsWith(\")\")) {\n\t\t\ttransaction.amount = transaction.amount.slice(1, transaction.amount.length - 1);\n\t\t}\n\t\ttransaction.isCredit = transaction.isCredit ? 1 : 0;\n\t});\n\n\n\trds.beginTransaction({\n\t\tinstanceIdentifier: 'slappbooksdb'\n\t}, function (error, connection) {\n\t\tif (error) { connection.rollback(); throw err; }\n\n\n\t\t// Replace the query with the actual query\n\t\t// You can pass the existing connection to this function.\n\t\t// A new connection will be creted if it's not present as the third param \n\t\ttransactions.forEach( (transaction, index) => {\n\t\t\t\trds.query({\n\t\t\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\t\t\tquery: 'SELECT id FROM entity WHERE name = ?',\n\t\t\t\t\t\tinserts: [transaction.entityName]\n\t\t\t\t\t}, function (error, results, connection) {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconsole.log(\"Error occurred while retreiving the entity id from the database\", error);\n\t\t\t\t\t\t\tconnection.rollback();\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(\"Successfully retrieved the entity id\")\n\t\t\t\t\t\t\tlet entity_id = results[0].id;\n\t\t\t\t\t\t\tconsole.log(transaction.trId);\n\t\t\t\t\t\t\t// Replace the query with the actual query\n\t\t\t\t\t\t\t// You can pass the existing connection to this function.\n\t\t\t\t\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\t\t\t\t\tlet sql = 'UPDATE transaction SET transaction_id=?, set_id=?, date=?, entity_id=?, is_credit=?, cheque_no=?, voucher_no=?, amount=?, notes=?, reconcile=? WHERE transaction_id=?';\n\t\t\t\t\t\t\trds.query({\n\t\t\t\t\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\t\t\t\t\tquery: sql,\n\t\t\t\t\t\t\t\tinserts: [transaction.trId, transaction.setId, transaction.date, entity_id, transaction.isCredit, transaction.checkNo, transaction.voucherNo, transaction.amount, transaction.notes, transaction.reconcile, transaction.trId ]\n\t\t\t\t\t\t\t}, function (error, results, connection) {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tconnection.rollback();\n\t\t\t\t\t\t\t\t\tconsole.log(\"Error occurred while updating the transaction\");\n\t\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Successfully updated the transaction\");\n\t\t\t\t\t\t\t\t\tconnection.commit();\n\t\t\t\t\t\t\t\t\tconnection.end();\n\t\t\t\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, connection);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, connection);\n\t\t\t});\n\t\t\n\t});\n\n\tcallback(null, 'Successfully executed');\n}","formatted":true,"resources":["rds-slappbooksdb","rds-slappbooksdb","apigusEast1slappbooksapiupdateTransactionpost"],"triggers":[{"resourceName":"apigusEast1slappbooksapiupdateTransactionpost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"updateTransaction","resourcePath":"/updateTransaction","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}}]},"6bd44e2e-17a8-49b7-847f-376b6c77b3bf":{"id":"6bd44e2e-17a8-49b7-847f-376b6c77b3bf","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"703c563d-d4ff-4c87-8f1d-ef49170ebee9":{"id":"703c563d-d4ff-4c87-8f1d-ef49170ebee9","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"0fddcfbb-9df4-458a-a743-9f28159227fc":{"id":"0fddcfbb-9df4-458a-a743-9f28159227fc","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-delete-transaction.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-delete-transaction.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\tlet setId = event.setId;\n\n\trds.beginTransaction({\n\t\tinstanceIdentifier: 'slappbooksdb'\n\t}, function (error, connection) {\n\t\tif (error) { throw err; }\n\n\n\t\tlet sql = 'DELETE FROM transaction WHERE set_id=?';\n\t\t// Replace the query with the actual query\n\t\t// You can pass the existing connection to this function.\n\t\t// A new connection will be creted if it's not present as the third param \n\t\trds.query({\n\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\tquery: sql,\n\t\t\tinserts: [setId]\n\t\t}, function (error, results, connection) {\n\t\t\tif (error) {\n\t\t\t\tconnection.rollback();\n\t\t\t\tconsole.log(\"Error occurred while deleting the transaction\");\n\t\t\t\tthrow error;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Successfully deleted the transaction\");\n\t\t\t\tconnection.commit();\n\t\t\t\tconsole.log(results);\n\t\t\t}\n\n\t\t\tconnection.end();\n\t\t});\n\n\t});\n\n\n\tcallback(null, 'Successfully executed');\n}","formatted":true,"resources":["rds-slappbooksdb","rds-slappbooksdb","apigusEast1slappbooksapideleteTransactionpost"],"triggers":[{"resourceName":"apigusEast1slappbooksapideleteTransactionpost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"deleteTransaction","resourcePath":"/deleteTransaction","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}}]},"1b506196-eb7e-48a3-8629-3700fde5867a":{"id":"1b506196-eb7e-48a3-8629-3700fde5867a","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"c1b1efaf-b507-4082-ab95-0537a81c91df":{"id":"c1b1efaf-b507-4082-ab95-0537a81c91df","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"0b73f184-a777-475d-9741-bf94b7a4629a":{"id":"0b73f184-a777-475d-9741-bf94b7a4629a","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-get-monthly-transactions.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-get-monthly-transactions.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\tlet postObject = event;\n\tlet entityName = postObject.entity;\n\tlet pageNo = postObject.page;\n\tlet pageSize = postObject.pageSize;\n\tlet sorted = postObject.sorted;\n\tlet filtered = postObject.filtered;\n\tlet startIndex = +pageNo * +pageSize;\n\tlet endIndex = startIndex + pageSize;\n\tlet pageNumber = 1;\n\tlet year = postObject.year;\n\tlet month = postObject.month;\n\n\tswitch(month) {\n\t\tcase \"January\":\n\t\t\tmonth = '01';\n\t\t\tbreak;\n\t\tcase \"February\":\n\t\t\tmonth = '02';\n\t\t\tbreak;\n\t\tcase \"March\":\n\t\t\tmonth = '03';\n\t\t\tbreak;\n\t\tcase \"April\":\n\t\t\tmonth = '01';\n\t\t\tbreak;\n\t\tcase \"May\":\n\t\t\tmonth = '05';\n\t\t\tbreak;\n\t\tcase \"June\":\n\t\t\tmonth = '06';\n\t\t\tbreak;\n\t\tcase \"July\":\n\t\t\tmonth = '07';\n\t\t\tbreak;\n\t\tcase \"August\":\n\t\t\tmonth = '08';\n\t\t\tbreak;\n\t\tcase \"September\":\n\t\t\tmonth = '09';\n\t\t\tbreak;\n\t\tcase \"October\":\n\t\t\tmonth = '10';\n\t\t\tbreak;\n\t\tcase \"November\":\n\t\t\tmonth = '11';\n\t\t\tbreak;\n\t\tcase \"December\":\n\t\t\tmonth = '12';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tmonth = '01';\n\t}\n\n\t// Replace the query with the actual query\n\t// You can pass the existing connection to this function.\n\t// A new connection will be creted if it's not present as the third param \n\tlet sql = 'SELECT * FROM transaction T INNER JOIN entity E ON T.entity_id = E.id WHERE E.name =? AND date BETWEEN ? AND ?  LIMIT ?,?';\n\tconsole.log(month);\n\tconsole.log(year);\n\n\t// Replace the query with the actual query\n\t// You can pass the existing connection to this function.\n\t// A new connection will be creted if it's not present as the third param \n\trds.query({\n\t\tinstanceIdentifier: 'slappbooksdb',\n\t\tquery: 'SELECT count(*) as count FROM transaction T INNER JOIN entity E ON T.entity_id = E.id WHERE E.name=?',\n\t\tinserts: [entityName]\n\t}, function (error, results, connection) {\n\t\tif (error) {\n\t\t\tconsole.log(\"Error occurred while retrieving count\");\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconsole.log(\"Successfully obtained database count\");\n\t\t\tconsole.log(results[0].count);\n\t\t\tpageNumber = Math.ceil(parseFloat(results[0].count) / parseFloat(pageSize));\n\n\t\t\t// Replace the query with the actual query\n\t\t\t// You can pass the existing connection to this function.\n\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\trds.query({\n\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\tquery: sql,\n\t\t\t\tinserts: [entityName, year.concat(\"-\").concat(month).concat(\"-01\"), year.concat(\"-\").concat(month).concat(\"-31\"), startIndex, pageSize]\n\t\t\t}, function (error, results, connection) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Error occurred while retreiving transactions\", error);\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tlet transactions = [];\n\t\t\t\t\ttransactionResult = results;\n\t\t\t\t\tconsole.log(transactionResult);\n\t\t\t\t\tconsole.log(\"Successfully retreived transactions\");\n\t\t\t\t\tif (startIndex == 0) {\n\n\t\t\t\t\t\tdebitSql = 'SELECT SUM(amount) as debit  FROM transaction T INNER JOIN entity E ON T.entity_id = E.id WHERE E.name = ? AND T.is_credit = 0 AND date < ?';\n\t\t\t\t\t\tcreditSql = 'SELECT SUM(amount) as credit FROM transaction T INNER JOIN entity E ON T.entity_id = E.id WHERE E.name = ? AND T.is_credit = 1 AND date < ?';\n\t\t\t\t\t\t// Replace the query with the actual query\n\t\t\t\t\t\t// You can pass the existing connection to this function.\n\t\t\t\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\t\t\t\trds.query({\n\t\t\t\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\t\t\t\tquery: debitSql,\n\t\t\t\t\t\t\tinserts: [entityName, year.concat(\"-\").concat(month).concat(\"-01\")]\n\t\t\t\t\t\t}, function (error, resultDebit, connection) {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tconsole.log(\"Error occurred while counting debit transactions\", error);\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.log(\"Successfully retreived debit transactions\");\n\t\t\t\t\t\t\t\tconsole.log(resultDebit);\n\t\t\t\t\t\t\t\tlet debit = resultDebit[0].debit;\n\n\n\t\t\t\t\t\t\t\t// Replace the query with the actual query\n\t\t\t\t\t\t\t\t// You can pass the existing connection to this function.\n\t\t\t\t\t\t\t\t// A new connection will be creted if it's not present as the third param \n\t\t\t\t\t\t\t\trds.query({\n\t\t\t\t\t\t\t\t\tinstanceIdentifier: 'slappbooksdb',\n\t\t\t\t\t\t\t\t\tquery: creditSql,\n\t\t\t\t\t\t\t\t\tinserts: [entityName, year.concat(\"-\").concat(month).concat(\"-01\")]\n\t\t\t\t\t\t\t\t}, function (error, resultCredit, connection) {\n\t\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Error occurred while counting credit transactions\", error);\n\t\t\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Successfully retrieved credit transactions\");\n\t\t\t\t\t\t\t\t\t\tconsole.log(resultCredit);\n\t\t\t\t\t\t\t\t\t\tlet credit = resultCredit[0].credit;\n\t\t\t\t\t\t\t\t\t\tcredit = credit === null ? 0 : credit;\n\t\t\t\t\t\t\t\t\t\tdebit = debit === null ? 0 : debit;\n\t\t\t\t\t\t\t\t\t\ttransactions.push({\n\t\t\t\t\t\t\t\t\t\t\ttrId: '00000000000000000',\n\t\t\t\t\t\t\t\t\t\t\tnotes: 'Balance Brought Forward',\n\t\t\t\t\t\t\t\t\t\t\tdate: year.concat(\"-\").concat(month).concat(\"-01\"),\n\t\t\t\t\t\t\t\t\t\t\tisCredit: (+debit - +credit) < 0 ? 1 : 0,\n\t\t\t\t\t\t\t\t\t\t\tamount: Math.abs(+debit - +credit),\n\t\t\t\t\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tconsole.log(transactionResult);\n\t\t\t\t\t\t\t\t\t\ttransactionResult.forEach(result => {\n\t\t\t\t\t\t\t\t\t\ttransactions.push({\n\t\t\t\t\t\t\t\t\t\t\ttrId: result.transaction_id,\n\t\t\t\t\t\t\t\t\t\t\tdate: result.date,\n\t\t\t\t\t\t\t\t\t\t\tcheckNo: result.cheque_no,\n\t\t\t\t\t\t\t\t\t\t\tvoucherNo: result.voucher_no,\n\t\t\t\t\t\t\t\t\t\t\tisCredit: result.is_credit,\n\t\t\t\t\t\t\t\t\t\t\tamount: result.amount,\n\t\t\t\t\t\t\t\t\t\t\tnotes: result.notes,\n\t\t\t\t\t\t\t\t\t\t\treconcile: result.reconcile,\n\t\t\t\t\t\t\t\t\t\t\tsetId: result.set_id,\n\t\t\t\t\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet finalResult = { rows: transactions, pages: pageNumber }\n\t\t\t\t\t\t\t\t\tconsole.log(finalResult);\n\t\t\t\t\t\t\t\t\tconnection.end();\n\t\t\t\t\t\t\t\t\tcallback(null, finalResult);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, connection);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, connection);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults.forEach(result => {\n\t\t\t\t\t\ttransactions.push({\n\t\t\t\t\t\t\ttrId: result.transaction_id,\n\t\t\t\t\t\t\tdate: result.date,\n\t\t\t\t\t\t\tcheckNo: result.cheque_no,\n\t\t\t\t\t\t\tvoucherNo: result.voucher_no,\n\t\t\t\t\t\t\tisCredit: result.is_credit,\n\t\t\t\t\t\t\tamount: result.amount,\n\t\t\t\t\t\t\tnotes: result.notes,\n\t\t\t\t\t\t\treconcile: result.reconcile,\n\t\t\t\t\t\t\tsetId: result.set_id,\n\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tlet finalResult = { rows: transactions, pages: pageNumber }\n\t\t\t\t\tconsole.log(finalResult);\n\t\t\t\t\tconnection.end();\n\t\t\t\t\tcallback(null, finalResult);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}, connection);\n\n\t\t}\n\t});\n}","formatted":true,"resources":["rds-slappbooksdb","rds-slappbooksdb","apigusEast1slappbooksapigetMonthlyTransactionListpost"],"triggers":[{"resourceName":"apigusEast1slappbooksapigetMonthlyTransactionListpost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getMonthlyTransactionList","resourcePath":"/getMonthlyTransactionList","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}}]},"f42d490d-ac9b-4dee-b0ac-e7fd6371cb09":{"id":"f42d490d-ac9b-4dee-b0ac-e7fd6371cb09","parent":null,"name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"2bf402ef-a957-429b-878f-f5b4c91f0ed3":{"id":"2bf402ef-a957-429b-878f-f5b4c91f0ed3","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"slappbooksdb\"] = {\n        host: \"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"slappbooksuser\",\n        password: \"12345678\",\n        database: \"slappbooksdb\",\n    };\n    \n    };","formatted":true,"resources":[],"triggers":[]},"8585b721-aeb2-4a48-978d-ddfca08566d1":{"id":"8585b721-aeb2-4a48-978d-ddfca08566d1","parent":"261bafd6-e58c-475d-9415-c1a9385d5243","name":"slappbooks-delete-entity.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"slappbooks/slappbooks-delete-entity.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\n\tlet entityName = event.entityName;\n\t// Replace the query with the actual query\n\t// You can pass the existing connection to this function.\n\t// A new connection will be created if it's not present as the third param \n\t// You must always end the DB connection after it's used\n\trds.query({\n\t\tinstanceIdentifier: 'slappbooksdb',\n\t\tquery: 'DELETE FROM entity WHERE name=?',\n\t\tinserts: [entityName]\n\t}, function (error, results, connection) {\n\t\tif (error) {\n\t\t\tconsole.log(\"Error occurred while deleting the entity\");\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconsole.log(\"Successfully deleted the entity\")\n\t\t\tconsole.log(results);\n\t\t}\n\n\t\tconnection.end();\n\t});\n\n\tcallback(null, 'Successfully executed');\n}","formatted":true,"resources":["apigusEast1slappbooksapideleteEntitypost","rds-slappbooksdb"],"triggers":[{"resourceName":"apigusEast1slappbooksapideleteEntitypost","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve","/getMonthlyTransactionList":"51kdvp","/addTransaction":"6nvup1","/updateTransaction":"80uu3a","/getEntityList":"82ry0p","/getTransactionList":"jkjjpa","/createTransactionWithCurrencyDifference":"jnrhbr","/createEntity":"jw0aj7","/getTransactionById":"uaou6j","/deleteTransaction":"wf61ni"},"resourceMode":0,"resourceName":"deleteEntity","resourcePath":"/deleteEntity","restMethod":"POST","proxyIntegration":false,"stageMode":1,"stageName":"Prod","stageDeploymentId":"kdy9lp"}}]}},"rootNode":"261bafd6-e58c-475d-9415-c1a9385d5243","openFiles":[],"currentFileId":"10af9bcd-ac92-434b-9eb0-ca8ff233ec9b","resources":{"rds-slappbooksdb":{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com","doesExist":true},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":1,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":1,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[{"name":"rds-slappbooksdb","type":"RDS","config":{"editMode":false,"operation":1,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"mysql","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.6.37"},"rdsSetting":{"instanceIdentifier":"slappbooksdb","masterUsername":"slappbooksuser","masterPassword":""},"rdsDBOptions":{"dbName":"slappbooksdb","dbPort":3306},"rdsInstanceArn":"arn:aws:rds:us-east-1:480964559519:db:slappbooksdb","Host":"slappbooksdb.cvmlduwb8e2g.us-east-1.rds.amazonaws.com"},"rdsInstanceResources":[],"isTransactional":false,"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"isTransactional":false,"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[]},"usage":{"6ce22331-3d5d-4d2e-a5ff-a2f2b38257dd":{"operations":{"beginTransaction":[{"instanceIdentifier":"slappbooksdb"}]},"occurrence":1,"triggers":[]},"0cafcfb9-14f8-4cdc-861f-299678af0759":{"operations":{"query":[{"instanceIdentifier":"slappbooksdb","query":"SELECT count(*) as count FROM transaction;"}]},"occurrence":1,"triggers":[]},"d5e8f837-33f8-4736-ba1b-eb1f3aface18":{"operations":{"query":[{"instanceIdentifier":"slappbooksdb","query":"${sql}"}]},"occurrence":1,"triggers":[]},"02bc79d4-d52f-4002-b502-992569e9d409":{"operations":{"beginTransaction":[{"instanceIdentifier":"slappbooksdb"}]},"occurrence":1,"triggers":[]},"d5925ac9-5dfa-4cc8-9963-15dd6fb40204":{"operations":{"beginTransaction":[{"instanceIdentifier":"slappbooksdb"}]},"occurrence":1,"triggers":[]},"0fddcfbb-9df4-458a-a743-9f28159227fc":{"operations":{"beginTransaction":[{"instanceIdentifier":"slappbooksdb"}]},"occurrence":1,"triggers":[]}}}],"selectedRegion":"us-east-1","mode":1,"additionalFiles":[],"params":{"query":"DELETE FROM entity WHERE name=?","inserts":"entityName"},"isGlobalEditMode":false,"enableInject":true},"globallyEditable":true,"usage":{}},"apigusEast1slappbooksapicreateEntitypost":{"name":"apigusEast1slappbooksapicreateEntitypost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"createEntity","resourcePath":"/createEntity","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"10af9bcd-ac92-434b-9eb0-ca8ff233ec9b":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"createEntity","resourcePath":"/createEntity","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapideleteTransactionpost":{"name":"apigusEast1slappbooksapideleteTransactionpost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"deleteTransaction","resourcePath":"/deleteTransaction","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"0fddcfbb-9df4-458a-a743-9f28159227fc":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"deleteTransaction","resourcePath":"/deleteTransaction","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapigetEntityListget":{"name":"apigusEast1slappbooksapigetEntityListget","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getEntityList","resourcePath":"/getEntityList","restMethod":"GET","proxyIntegration":true,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"d5e8f837-33f8-4736-ba1b-eb1f3aface18":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getEntityList","resourcePath":"/getEntityList","restMethod":"GET","proxyIntegration":true,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapigetMonthlyTransactionListpost":{"name":"apigusEast1slappbooksapigetMonthlyTransactionListpost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getMonthlyTransactionList","resourcePath":"/getMonthlyTransactionList","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"0b73f184-a777-475d-9741-bf94b7a4629a":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getMonthlyTransactionList","resourcePath":"/getMonthlyTransactionList","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapigetTransactionByIdget":{"name":"apigusEast1slappbooksapigetTransactionByIdget","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getTransactionById","resourcePath":"/getTransactionById","restMethod":"GET","proxyIntegration":true,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"1f616325-bebd-4cb6-9a59-efae98b7760d":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getTransactionById","resourcePath":"/getTransactionById","restMethod":"GET","proxyIntegration":true,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapicreateTransactionWithCurrencyDifferencepost":{"name":"apigusEast1slappbooksapicreateTransactionWithCurrencyDifferencepost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"createTransactionWithCurrencyDifference","resourcePath":"/createTransactionWithCurrencyDifference","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"02bc79d4-d52f-4002-b502-992569e9d409":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"createTransactionWithCurrencyDifference","resourcePath":"/createTransactionWithCurrencyDifference","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapiaddTransactionpost":{"name":"apigusEast1slappbooksapiaddTransactionpost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"addTransaction","resourcePath":"/addTransaction","restMethod":"POST","stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"6ce22331-3d5d-4d2e-a5ff-a2f2b38257dd":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"addTransaction","resourcePath":"/addTransaction","restMethod":"POST","stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapigetTransactionListpost":{"name":"apigusEast1slappbooksapigetTransactionListpost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getTransactionList","resourcePath":"/getTransactionList","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"0cafcfb9-14f8-4cdc-861f-299678af0759":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"getTransactionList","resourcePath":"/getTransactionList","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapiupdateTransactionpost":{"name":"apigusEast1slappbooksapiupdateTransactionpost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"updateTransaction","resourcePath":"/updateTransaction","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true,"usage":{"d5925ac9-5dfa-4cc8-9963-15dd6fb40204":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve"},"resourceMode":0,"resourceName":"updateTransaction","resourcePath":"/updateTransaction","restMethod":"POST","proxyIntegration":false,"stageMode":0,"stageName":"Prod"}]}}},"apigusEast1slappbooksapideleteEntitypost":{"name":"apigusEast1slappbooksapideleteEntitypost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve","/getMonthlyTransactionList":"51kdvp","/addTransaction":"6nvup1","/updateTransaction":"80uu3a","/getEntityList":"82ry0p","/getTransactionList":"jkjjpa","/createTransactionWithCurrencyDifference":"jnrhbr","/createEntity":"jw0aj7","/getTransactionById":"uaou6j","/deleteTransaction":"wf61ni"},"resourceMode":0,"resourceName":"deleteEntity","resourcePath":"/deleteEntity","restMethod":"POST","proxyIntegration":false,"stageMode":1,"stageName":"Prod","stageDeploymentId":"kdy9lp"},"globallyEditable":true,"usage":{"8585b721-aeb2-4a48-978d-ddfca08566d1":{"operations":{},"occurrence":1,"triggers":[{"selectedRegion":"us-east-1","apiMode":1,"apiName":"slappbooksapi","apiId":"pvygbjr02j","endpointType":"EDGE","rootResourceId":"1z6waggnve","existingResources":{"/":"1z6waggnve","/getMonthlyTransactionList":"51kdvp","/addTransaction":"6nvup1","/updateTransaction":"80uu3a","/getEntityList":"82ry0p","/getTransactionList":"jkjjpa","/createTransactionWithCurrencyDifference":"jnrhbr","/createEntity":"jw0aj7","/getTransactionById":"uaou6j","/deleteTransaction":"wf61ni"},"resourceMode":0,"resourceName":"deleteEntity","resourcePath":"/deleteEntity","restMethod":"POST","proxyIntegration":false,"stageMode":1,"stageName":"Prod","stageDeploymentId":"kdy9lp"}]}}}},"state":"SAVED","triggers":{"apigusEast1slappbooksapiaddTransactionpost":{"6ce22331-3d5d-4d2e-a5ff-a2f2b38257dd":{}},"apigusEast1slappbooksapigetTransactionListpost":{"0cafcfb9-14f8-4cdc-861f-299678af0759":{}},"apigusEast1slappbooksapicreateEntitypost":{"10af9bcd-ac92-434b-9eb0-ca8ff233ec9b":{}},"apigusEast1slappbooksapigetTransactionByIdget":{"1f616325-bebd-4cb6-9a59-efae98b7760d":{}},"apigusEast1slappbooksapigetEntityListget":{"d5e8f837-33f8-4736-ba1b-eb1f3aface18":{}},"apigusEast1slappbooksapicreateTransactionWithCurrencyDifferencepost":{"02bc79d4-d52f-4002-b502-992569e9d409":{}},"apigusEast1slappbooksapiupdateTransactionpost":{"d5925ac9-5dfa-4cc8-9963-15dd6fb40204":{}},"apigusEast1slappbooksapideleteTransactionpost":{"0fddcfbb-9df4-458a-a743-9f28159227fc":{}},"apigusEast1slappbooksapigetMonthlyTransactionListpost":{"0b73f184-a777-475d-9741-bf94b7a4629a":{}}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true},"SL":"0.0.3"}},"startX":0,"startY":0,"draggedResourceName":"RDS","draggedResourceType":"R","draggedResourceId":null,"additionalFiles":[],"changeExistingProject":true},"PROJECT_META":{"projectName":"slappbooks","projectDescription":"slappbooks","projectVersion":"1.0.0","repoName":"nat","repoUrl":"https://github.com/sigmaidetest/nat","lastSave":1516722138878}}